/**
 * Created by alfonso on 11/12/14.
 */
var Bookshelf = require('bookshelf').db;
var BaseController = require('./base-controller');
var _ = require('lodash');

var __hasProp = {}.hasOwnProperty;

/**
 * We create a function that allow us to inherit from a parent.
 * This code is based on the one generated by Coffescript inheritance.
 * @param child
 * @param parent
 * @returns {*}
 * @private
 */
var __extends = function(child, parent) {
  for (var key in parent) {
    if (__hasProp.call(parent, key))
      child[key] = parent[key];
  }
  function ctor() {
    this.constructor = child;
  }
  ctor.prototype = parent.prototype;
  child.prototype = new ctor();
  child.__super__ = parent.prototype; return child;
};

/**
 * We export the controller, passing the BaseController on the binding and extending it.
 * If like to add more methods to this specific controller this should be the place
 */
module.exports = (function(_super) {
  function CaregiversController() {
    _super.apply(this, arguments);
  }
  __extends(CaregiversController, _super);

  CaregiversController.prototype.model = Bookshelf.models.Caregiver.Model;
  CaregiversController.prototype.collection = Bookshelf.models.Caregiver.Collection;
  return CaregiversController;
})(BaseController);
